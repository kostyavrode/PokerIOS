name: Build and Upload iOS to App Store

on: [push, pull_request]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - iOS
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  upload-ios-to-app-store:
    name: Upload iOS Build to App Store
    runs-on: macos-latest
    needs: buildForAllSupportedPlatforms
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download iOS Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: Build-iOS
          path: build/iOS

      - name: Install Transporter (if needed)
        run: |
          if ! command -v xcrun altool &> /dev/null; then
            echo "Installing Transporter..."
            brew install fastlane
          fi

      - name: Upload to App Store
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
        run: |
          echo "${APP_STORE_CONNECT_PRIVATE_KEY}" > AuthKey.p8
          xcrun altool --upload-app -f "build/iOS/iOS.ipa" -t ios --apiKey ${APP_STORE_CONNECT_KEY_ID} --apiIssuer ${APP_STORE_CONNECT_ISSUER_ID}
