workflows:
  unity-ios-workflow:
    name: Unity iOS Workflow
    max_build_duration: 120
    integrations:
      app_store_connect: APP
    environment:
      unity: 2023.1.17f1
      xcode: 15.4
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.OfflinePlayingcards
      groups:
        - UNITY
      vars:
        BUILD_SCRIPT: BuildIos
        UNITY_IOS_DIR: ios
        XCODE_PROJECT: "Unity-iPhone.xcodeproj"
        XCODE_SCHEME: "Unity-iPhone"
        BUNDLE_ID: "com.OfflinePlayingcards"
        APP_STORE_APPLE_ID: 6742623321
      cocoapods: default
    scripts:
      - name: Activate Unity license
        script: | 
          $UNITY_HOME/Contents/MacOS/Unity -batchmode -quit -logFile \
            -serial ${UNITY_SERIAL} \
            -username ${UNITY_EMAIL} \
            -password ${UNITY_PASSWORD}

      - name: Generate the Xcode project from Unity
        script: | 
          $UNITY_HOME/Contents/MacOS/Unity -batchmode \
            -quit \
            -logFile \
            -projectPath . \
            -executeMethod BuildScript.$BUILD_SCRIPT \
            -nographics

      - name: Verify Xcode project exists
        script: |
          if [ ! -d "$UNITY_IOS_DIR/$XCODE_PROJECT" ]; then
            echo "❌ ERROR: Xcode project not found at $UNITY_IOS_DIR/$XCODE_PROJECT"
            exit 1
          fi
          echo "✅ Xcode project found."

      - name: Check available Xcode schemes
        script: |
          cd $UNITY_IOS_DIR
          xcodebuild -list

      - name: Force generate Xcode schemes if missing
        script: |
          cd $UNITY_IOS_DIR
          if ! xcodebuild -list | grep -q "$XCODE_SCHEME"; then
            echo "⚠️ Xcode scheme missing, generating..."
            xcodebuild -project "$XCODE_PROJECT" -scheme "$XCODE_SCHEME" -destination 'platform=iOS Simulator,name=iPhone 14' clean build
          else
            echo "✅ Xcode scheme found."
          fi

      - name: Check file permissions
        script: |
          ls -la $UNITY_IOS_DIR
          ls -la $UNITY_IOS_DIR/$XCODE_PROJECT

      - name: Set up code signing settings on Xcode project
        script: | 
          xcode-project use-profiles

      - name: Set the build number
        script: | 
          BUILD_NUMBER=($(app-store-connect get-latest-app-store-build-number "$APP_ID") + 1)
          cd $UNITY_IOS_DIR
          agvtool new-version -all $BUILD_NUMBER
          
      - name: Debug build location
        script: |
          echo "Checking IPA location..."
          find $UNITY_IOS_DIR -name "*.ipa"
          echo "Checking dSYM location..."
          find $HOME/Library/Developer/Xcode/DerivedData -name "*.dSYM"
          
      - name: Check code signing certificates
        script: |
          security find-identity -v -p codesigning          

      - name: Build ipa for distribution
        script: | 
          xcode-project build-ipa \
            --project "$UNITY_IOS_DIR/$XCODE_PROJECT" \
            --scheme "$XCODE_SCHEME"

    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      scripts:
        - name: Deactivate Unity License
          script: | 
            /Applications/Unity\ Hub.app/Contents/Frameworks/UnityLicensingClient_V1.app/Contents/MacOS/Unity.Licensing.Client \
            --return-ulf \
            --username ${UNITY_EMAIL} \
            --password ${UNITY_PASSWORD}

      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true
          failure: false

      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - group name 1
          - group name 2
        submit_to_app_store: true
